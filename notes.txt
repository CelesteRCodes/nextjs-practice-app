NextJS is a framework (fullstack)

Page Pre-Rendering: 
  - w/ next js the first page is pre-rendered
    good for search engine but may not always be, could
    be missing info
    
  - once rendered, React takes over and hydrates code
    (refreshes, fully active/interactive, new data fetched)

  - 2 forms of pre-rendering (render first with data = pre-render):
  static generation and server side rendering
    - NextJS defaults static generation
     - getStaticProps() NextJs calls this first before component function 
      (searches for this function first)
      - function prepares props for this page, can only use on pages
      - can be asynchronous (waits for data to be loaded, waits for promise)
      - allows you to load data before component is rendered, so it
        can be rendered with the required data
      - any code inside function is only executed during build process, 
        never client side
      - best if you don't have data that changes multi times per sec, and 
        and don't need access to request object (authentication) 
          - pregenerates html file that can be stored and served by CDN 
            (cache and reused) which is faster than having to fetch data and reload

      - cons of getStaticProps() : 
          - data could be outdated without client side data fetching
            - use revalidate prop: unlocks incremental static generation,
              time it'll wait before it regenerates page for incoming request
              - revalidate: 10, page would regenerate every 10 sec as long 
                as there's new data added

      - getStaticPaths() returns object that describes all the dynamic segment values,
        all the meetupIds that should be pregenerated 
        - paths array should generated dynamically
        - fallback = false is strict, has to enter what's supported or receive a 404
        - fallback = true, NextJS will try to generate a pg for this ID dynamically 
          on the server for the incoming request

      - alternative to getStaticProps is getServerSideProps()
        - regenerates with incoming data
        - receives context from the request with data (header, body)

        - cons: 
          - have to wait for page to be generate on ever incoming request

     


